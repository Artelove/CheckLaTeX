# CheckLaTeX VS Code Extension Uninstall Script for Windows
# Requires: PowerShell 5.1+, VS Code

param(
    [switch]$Verbose,
    [switch]$Force
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-StatusInfo($Message) {
    Write-Host "[INFO] $Message" -ForegroundColor Blue
}

function Write-StatusSuccess($Message) {
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-StatusWarning($Message) {
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-StatusError($Message) {
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

Write-StatusInfo "=== –£–¥–∞–ª–µ–Ω–∏–µ CheckLaTeX VS Code Extension ==="

# –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ VS Code
function Remove-FromVSCode {
    Write-StatusInfo "–ü–æ–∏—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π CheckLaTeX –≤ VS Code..."
    
    try {
        $extensions = code --list-extensions 2>$null | Where-Object { $_ -match "checklatex" }
        
        if ($extensions) {
            foreach ($extension in $extensions) {
                if ($extension.Trim()) {
                    Write-StatusInfo "–£–¥–∞–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: $extension"
                    try {
                        code --uninstall-extension $extension
                        if ($?) {
                            Write-StatusSuccess "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ $extension —É–¥–∞–ª–µ–Ω–æ"
                        } else {
                            Write-StatusWarning "–í–æ–∑–º–æ–∂–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ $extension"
                        }
                    }
                    catch {
                        Write-StatusError "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ $extension : $($_.Exception.Message)"
                    }
                }
            }
            Write-StatusSuccess "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ VS Code"
        } else {
            Write-StatusWarning "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è CheckLaTeX –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ VS Code"
        }
    }
    catch {
        Write-StatusError "VS Code CLI –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    }
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ VS Code Insiders
function Remove-FromVSCodeInsiders {
    Write-StatusInfo "–ü–æ–∏—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π CheckLaTeX –≤ VS Code Insiders..."
    
    try {
        $extensionsInsiders = code-insiders --list-extensions 2>$null | Where-Object { $_ -match "checklatex" }
        
        if ($extensionsInsiders) {
            foreach ($extension in $extensionsInsiders) {
                if ($extension.Trim()) {
                    Write-StatusInfo "–£–¥–∞–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ Insiders: $extension"
                    try {
                        code-insiders --uninstall-extension $extension
                        if ($?) {
                            Write-StatusSuccess "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ $extension —É–¥–∞–ª–µ–Ω–æ –∏–∑ Insiders"
                        } else {
                            Write-StatusWarning "–í–æ–∑–º–æ–∂–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ $extension –∏–∑ Insiders"
                        }
                    }
                    catch {
                        Write-StatusError "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ $extension –∏–∑ Insiders: $($_.Exception.Message)"
                    }
                }
            }
            Write-StatusSuccess "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ VS Code Insiders"
        } else {
            Write-StatusWarning "–†–∞—Å—à–∏—Ä–µ–Ω–∏—è CheckLaTeX –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ VS Code Insiders"
        }
    }
    catch {
        Write-StatusWarning "VS Code Insiders –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    }
}

# –£–¥–∞–ª–µ–Ω–∏–µ .vsix —Ñ–∞–π–ª–æ–≤
function Remove-VsixFiles {
    Write-StatusInfo "–£–¥–∞–ª–µ–Ω–∏–µ .vsix —Ñ–∞–π–ª–æ–≤..."
    
    $searchPaths = @(
        $env:USERPROFILE,
        "$env:USERPROFILE\Downloads",
        "$env:USERPROFILE\Desktop"
    )
    
    $removedCount = 0
    
    foreach ($path in $searchPaths) {
        if (Test-Path $path) {
            try {
                $vsixFiles = Get-ChildItem -Path $path -Filter "*checklatex*extension*.vsix" -File -ErrorAction SilentlyContinue
                
                foreach ($file in $vsixFiles) {
                    try {
                        if ($Verbose) {
                            Write-StatusInfo "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª: $($file.FullName)"
                        }
                        Remove-Item $file.FullName -Force
                        $removedCount++
                    }
                    catch {
                        Write-StatusWarning "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª $($file.FullName): $($_.Exception.Message)"
                    }
                }
            }
            catch {
                Write-StatusWarning "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ $path : $($_.Exception.Message)"
            }
        }
    }
    
    if ($removedCount -gt 0) {
        Write-StatusSuccess "–£–¥–∞–ª–µ–Ω–æ $removedCount .vsix —Ñ–∞–π–ª–æ–≤"
    } else {
        Write-StatusInfo "–§–∞–π–ª—ã .vsix –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    }
}

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function Remove-TempFiles {
    Write-StatusInfo "–£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    $tempPaths = @(
        "$env:TEMP\checklatex-extension-*",
        "$env:TEMP\checklatex-*",
        "$env:LOCALAPPDATA\Temp\checklatex-extension-*"
    )
    
    $removedCount = 0
    
    foreach ($pattern in $tempPaths) {
        try {
            $items = Get-ChildItem -Path $pattern -ErrorAction SilentlyContinue
            
            foreach ($item in $items) {
                try {
                    if ($Verbose) {
                        Write-StatusInfo "–£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É: $($item.FullName)"
                    }
                    Remove-Item $item.FullName -Recurse -Force
                    $removedCount++
                }
                catch {
                    Write-StatusWarning "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å $($item.FullName): $($_.Exception.Message)"
                }
            }
        }
        catch {
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞
        }
    }
    
    if ($removedCount -gt 0) {
        Write-StatusSuccess "–£–¥–∞–ª–µ–Ω–æ $removedCount –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫"
    } else {
        Write-StatusInfo "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    }
}

# –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
function Clear-NpmCache {
    if ($Force) {
        Write-StatusInfo "–û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞..."
        try {
            npm cache clean --force 2>$null
            Write-StatusSuccess "npm –∫—ç—à –æ—á–∏—â–µ–Ω"
        }
        catch {
            Write-StatusWarning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å npm –∫—ç—à: $($_.Exception.Message)"
        }
    }
}

# –ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ
function Show-ReinstallInstructions {
    Write-StatusInfo "=== –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–µ ==="
    Write-Host ""
    Write-Host "üîÑ –î–ª—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ Bash: curl -fsSL https://raw.githubusercontent.com/Artelove/CheckLaTeX/main/install-extension.sh | bash"
    Write-Host "  ‚Ä¢ PowerShell: & ([scriptblock]::Create((Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/Artelove/CheckLaTeX/main/install-extension.ps1').Content))"
    Write-Host ""
    Write-Host "üìÅ –ò–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ ./install-extension.sh (Linux/macOS)"
    Write-Host "  ‚Ä¢ .\install-extension.ps1 (Windows)"
    Write-Host ""
}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
function Confirm-Removal {
    if (-not $Force) {
        Write-Host ""
        $confirmation = Read-Host "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å CheckLaTeX —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ? (y/N)"
        if ($confirmation -notmatch '^[Yy]$') {
            Write-StatusInfo "–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è"
            exit 0
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function Main {
    try {
        Confirm-Removal
        
        Remove-FromVSCode
        Remove-FromVSCodeInsiders
        Remove-VsixFiles
        Remove-TempFiles
        Clear-NpmCache
        
        Write-StatusSuccess "CheckLaTeX —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–æ"
        
        if (-not $Force) {
            Show-ReinstallInstructions
        }
    }
    catch {
        Write-StatusError "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: $($_.Exception.Message)"
        exit 1
    }
}

# –ó–∞–ø—É—Å–∫
Main