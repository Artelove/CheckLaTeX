# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π CheckLaTeX Server
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ—á–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –æ—à–∏–±–æ–∫ –¥–ª—è VS Code

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π CheckLaTeX Server" -ForegroundColor Green
Write-Host "================================================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
$serverUrl = "http://localhost:5000"
$checkEndpoint = "$serverUrl/api/lint/check"

Write-Host "üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Cyan

try {
    $response = Invoke-RestMethod -Uri "$serverUrl/health" -Method GET -TimeoutSec 5 -ErrorAction Stop
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: cd tex-lint && dotnet run" -ForegroundColor Red
    Write-Host "   –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è, –∑–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç" -ForegroundColor Yellow
    exit 1
}

# –¢–µ—Å—Ç–æ–≤—ã–π LaTeX –¥–æ–∫—É–º–µ–Ω—Ç —Å –Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏
$testLatex = @"
\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}

\begin{document}

\title{–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç}
\author{–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫}
\date{\today}
\maketitle

\section{–í–≤–µ–¥–µ–Ω–∏–µ}

–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ" –∫–∞–≤—ã—á–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
–¢–∞–∫–∂–µ –∑–¥–µ—Å—å –µ—Å—Ç—å –¥–µ—Ñ–∏—Å - –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∏—Ä–µ.

–ï—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä —Å '–æ–¥–∏–Ω–∞—Ä–Ω—ã–º–∏' –∫–∞–≤—ã—á–∫–∞–º–∏.
–ò –µ—â–µ –æ–¥–∏–Ω –¥–µ—Ñ–∏—Å - —Ç–∏—Ä–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.

\section{–ó–∞–∫–ª—é—á–µ–Ω–∏–µ}

–¢–µ–∫—Å—Ç —Å "–¥–≤–æ–π–Ω—ã–º–∏" –∫–∞–≤—ã—á–∫–∞–º–∏ –∏ –¥–µ—Ñ–∏—Å–æ–º - —Ç–∏—Ä–µ.

\end{document}
"@

Write-Host "üìÑ –¢–µ—Å—Ç–æ–≤—ã–π LaTeX –¥–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω" -ForegroundColor Cyan
Write-Host "   –°–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ –¥–µ—Ñ–∏—Å—ã –≤–º–µ—Å—Ç–æ —Ç–∏—Ä–µ" -ForegroundColor Yellow

# –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º JSON –∑–∞–ø—Ä–æ—Å
$requestBody = @{
    content = $testLatex
} | ConvertTo-Json -Depth 3

Write-Host "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑..." -ForegroundColor Cyan

try {
    $headers = @{
        "Content-Type" = "application/json"
        "Accept" = "application/json"
    }
    
    $response = Invoke-RestMethod -Uri $checkEndpoint -Method POST -Body $requestBody -Headers $headers -TimeoutSec 30
    
    Write-Host "‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    Write-Host "üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: $($response.commandsFound)" -ForegroundColor Cyan
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    Write-Host "" 
    Write-Host "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:" -ForegroundColor Yellow
    Write-Host "=========================" -ForegroundColor Yellow
    
    $totalErrors = 0
    $diagnosticErrors = 0
    
    foreach ($testResult in $response.testResults) {
        $errorCount = $testResult.errors.Count
        $totalErrors += $errorCount
        
        if ($errorCount -gt 0) {
            Write-Host ""
            Write-Host "üìã –¢–µ—Å—Ç: $($testResult.testName)" -ForegroundColor Magenta
            Write-Host "   –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $errorCount" -ForegroundColor White
            
            foreach ($error in $testResult.errors) {
                Write-Host "   ‚îú‚îÄ –¢–∏–ø: $($error.type)" -ForegroundColor White
                Write-Host "   ‚îú‚îÄ –°–æ–æ–±—â–µ–Ω–∏–µ: $($error.info)" -ForegroundColor White
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π
                if ($error.fileName -or $error.lineNumber -or $error.columnNumber) {
                    $diagnosticErrors++
                    Write-Host "   ‚îú‚îÄ üìç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:" -ForegroundColor Green
                    
                    if ($error.fileName) {
                        Write-Host "   ‚îÇ  ‚îú‚îÄ –§–∞–π–ª: $($error.fileName)" -ForegroundColor Green
                    }
                    if ($error.lineNumber) {
                        Write-Host "   ‚îÇ  ‚îú‚îÄ –°—Ç—Ä–æ–∫–∞: $($error.lineNumber)" -ForegroundColor Green
                    }
                    if ($error.columnNumber) {
                        Write-Host "   ‚îÇ  ‚îú‚îÄ –ö–æ–ª–æ–Ω–∫–∞: $($error.columnNumber)" -ForegroundColor Green
                    }
                    if ($error.endLineNumber -and $error.endColumnNumber) {
                        Write-Host "   ‚îÇ  ‚îú‚îÄ –ö–æ–Ω–µ—Ü: —Å—Ç—Ä–æ–∫–∞ $($error.endLineNumber), –∫–æ–ª–æ–Ω–∫–∞ $($error.endColumnNumber)" -ForegroundColor Green
                    }
                    if ($error.originalText) {
                        Write-Host "   ‚îÇ  ‚îú‚îÄ –ö–æ–Ω—Ç–µ–∫—Å—Ç: '$($error.originalText)'" -ForegroundColor Green
                    }
                    if ($error.suggestedFix) {
                        Write-Host "   ‚îÇ  ‚îî‚îÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: '$($error.suggestedFix)'" -ForegroundColor Green
                    }
                } else {
                    Write-Host "   ‚îî‚îÄ ‚ö†Ô∏è  –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" -ForegroundColor Red
                }
                
                Write-Host ""
            }
        }
    }
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    Write-Host "üìà –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Yellow
    Write-Host "======================" -ForegroundColor Yellow
    Write-Host "–í—Å–µ–≥–æ –æ—à–∏–±–æ–∫: $totalErrors" -ForegroundColor White
    Write-Host "–° –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π: $diagnosticErrors" -ForegroundColor Green
    Write-Host "–ë–µ–∑ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: $($totalErrors - $diagnosticErrors)" -ForegroundColor Red
    
    if ($diagnosticErrors -gt 0) {
        $percentage = [math]::Round(($diagnosticErrors / $totalErrors) * 100, 1)
        Write-Host "–ü–æ–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π: $percentage%" -ForegroundColor Green
        
        if ($percentage -eq 100) {
            Write-Host "üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –æ—à–∏–±–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Green
        } elseif ($percentage -ge 50) {
            Write-Host "‚úÖ –•–æ—Ä–æ—à–æ! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Yellow
        } else {
            Write-Host "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ! –ú–∞–ª–æ –æ—à–∏–±–æ–∫ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
    Write-Host ""
    Write-Host "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API:" -ForegroundColor Yellow
    Write-Host "=========================" -ForegroundColor Yellow
    
    $apiChecksPassed = 0
    $totalApiChecks = 4
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ù–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π
    if ($response.commandsFound -ne $null -and $response.testResults -ne $null) {
        Write-Host "‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç" -ForegroundColor Green
        $apiChecksPassed++
    } else {
        Write-Host "‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ testResults
    if ($response.testResults -is [array] -and $response.testResults.Count -gt 0) {
        Write-Host "‚úÖ testResults —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º —Å –¥–∞–Ω–Ω—ã–º–∏" -ForegroundColor Green
        $apiChecksPassed++
    } else {
        Write-Host "‚ùå testResults –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º –∏–ª–∏ –ø—É—Å—Ç–æ–π" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ errors
    $hasErrorStructure = $false
    foreach ($testResult in $response.testResults) {
        if ($testResult.errors -is [array]) {
            $hasErrorStructure = $true
            break
        }
    }
    
    if ($hasErrorStructure) {
        Write-Host "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ errors –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞" -ForegroundColor Green
        $apiChecksPassed++
    } else {
        Write-Host "‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ errors –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ù–æ–≤—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
    $hasDiagnosticFields = $false
    foreach ($testResult in $response.testResults) {
        foreach ($error in $testResult.errors) {
            if ($error.PSObject.Properties.Name -contains "fileName" -or
                $error.PSObject.Properties.Name -contains "lineNumber" -or
                $error.PSObject.Properties.Name -contains "columnNumber") {
                $hasDiagnosticFields = $true
                break
            }
        }
        if ($hasDiagnosticFields) { break }
    }
    
    if ($hasDiagnosticFields) {
        Write-Host "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ API" -ForegroundColor Green
        $apiChecksPassed++
    } else {
        Write-Host "‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ API" -ForegroundColor Red
    }
    
    Write-Host "API –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω–æ: $apiChecksPassed/$totalApiChecks" -ForegroundColor White
    
    # –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    Write-Host ""
    Write-Host "üèÅ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:" -ForegroundColor Yellow
    Write-Host "=====================" -ForegroundColor Yellow
    
    if ($apiChecksPassed -eq $totalApiChecks -and $diagnosticErrors -gt 0) {
        Write-Host "üéâ –£–°–ü–ï–•! –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
        Write-Host "   VS Code —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç —Ç–æ—á–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –æ—à–∏–±–æ–∫" -ForegroundColor Green
        exit 0
    } elseif ($apiChecksPassed -ge 3) {
        Write-Host "‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–ï–¢: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏" -ForegroundColor Yellow
        Write-Host "   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞" -ForegroundColor Yellow
        exit 1
    } else {
        Write-Host "‚ùå –û–®–ò–ë–ö–ê: –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç" -ForegroundColor Red
        Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–º –∫–æ–¥–µ" -ForegroundColor Red
        exit 2
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    
    if ($_.Exception.Message -match "404") {
        Write-Host "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç /api/lint/check —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
    } elseif ($_.Exception.Message -match "500") {
        Write-Host "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫" -ForegroundColor Yellow
    } elseif ($_.Exception.Message -match "timeout") {
        Write-Host "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ –∏–ª–∏ –∑–∞–≤–∏—Å" -ForegroundColor Yellow
    }
    
    exit 3
} 